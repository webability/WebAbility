<?php

namespace modules\user\install;

class installer extends \common\installer
{
  const ID = 'user';
  const VERSION = '1.0.1';

  protected $script = array(
    array( 'Order' => 'CreateMenuTheme',
           'Id' => 'usersecurity',
           'Template' => null,
           'Name' => 'usersecurity',
           'Icon' => '/skins/admin/modules/user/security.png',
           'Cond' => null,
           'Help' => 'usersecurity' ),

    array( 'Order' => 'CreateMenu',
           'Id' => 'usersecurity_',
           'Theme' => 'usersecurity',
           'Father' => null,
           'Template' => null,
           'Access' => null,
           'Name' => 'users',
           'Link' => '@adminusersecuritylist',
           'Params' => null,
           'Icon' => null,
           'Cond' => null,
           'Help' => 'users' ),
     
    );

  public function __construct($language)
  {
    parent::__construct('modules/'.self::ID.'.'.self::VERSION.'/', self::ID, self::VERSION, $language);
  }  
  
  public function install()
  {
    $messages = $this->installDatabase();
    
    $this->setModule(self::ID, $this->BASEDIR);

    // we insert the default data values in the database
    // insert super user in user_user
    $userEntity = \modules\user\entities\userEntity::getInstance();
    $user = $userEntity->user_user->doSelect(1);
    if ($user)
    {
      $rec = array('status' => 'S', 'name' => $this->base->config->user, 'un' => $this->base->config->user, 'pw' => $this->base->config->password, 'mail' => $this->base->config->email);
      $userEntity->user_user->doUpdate(1, $rec);
    }
    else
    {
      $rec = array('key' => 0, 'status' => 'S', 'name' => $this->base->config->user, 'un' => $this->base->config->user, 'pw' => $this->base->config->password, 'mail' => $this->base->config->email, 'sex' => 'M', 'date' => 'sysdate');
      $userEntity->user_user->doInsert($rec); // should be #1
    }

    // access groups
    $l = new \core\WALanguage(file_get_contents($this->base->config->BASEDIR . $this->BASEDIR . 'install/languages/database/user_accessgroup.'.$this->base->Language.'.xml'));
    $accessEntity = \modules\user\entities\accessEntity::getInstance();
    $accessEntity->user_accessgroup->doInsert( array('key' => 'user', 'name' => $l->user_name, 'module' => self::ID) );

    // we insert access rights
    $l = new \core\WALanguage(file_get_contents($this->base->config->BASEDIR . $this->BASEDIR . 'install/languages/database/user_access.'.$this->base->Language.'.xml'));
    $accessEntity->user_access->doInsert( array('key' => 'console', 'name' => $l->console_name, 'group' => 'user') );
    $accessEntity->user_access->doInsert( array('key' => 'config', 'name' => $l->config_name, 'group' => 'user') );
    $accessEntity->user_access->doInsert( array('key' => 'explorer', 'name' => $l->explorer_name, 'group' => 'user') );
    $accessEntity->user_access->doInsert( array('key' => 'users', 'name' => $l->users_name, 'group' => 'user') );
    $accessEntity->user_access->doInsert( array('key' => 'useraccesses', 'name' => $l->useraccesses_name, 'group' => 'user') );
    $accessEntity->user_access->doInsert( array('key' => 'userprofiles', 'name' => $l->userprofiles_name, 'group' => 'user') );
    
    $messages .= $this->language->getEntry('records');

    // link securityEntity
    $master = new \xconfig\XConfig(file_get_contents($this->base->config->REPOSITORYDIR.'master.conf'));
    $master->security = '\modules\user\entities\securityEntity';
    $this->base->writeConfig('master', $master);
    $admin = new \xconfig\XConfig(file_get_contents($this->base->config->REPOSITORYDIR.'admin.conf'));
    $admin->security = '\modules\user\entities\securityEntity';
    $this->base->writeConfig('admin', $admin);

    // copy pages
    $res = \core\WAFile::copyFile($this->base->config->BASEDIR.$this->BASEDIR.'/pagesadmin', $this->base->config->BASEDIR.'application/pagesadmin');
    $res = \core\WAFile::copyFile($this->base->config->BASEDIR.$this->BASEDIR.'/siteadmin', $this->base->config->ADMINDIR);

    $messages .= $this->language->getEntry('pagesadmin') . "<br />\n";

    // run the scripter
    $messages .= $this->installScript();
    
    return $messages;
  }
  
  public function uninstall()
  {
    // run the scripter
    $messages = $this->uninstallScript();

    // unlink securityEntity
    $master = new \xconfig\XConfig(file_get_contents($this->base->config->REPOSITORYDIR.'master.conf'));
    unset($master->security);
    $this->base->writeConfig('master', $master);
    $admin = new \xconfig\XConfig(file_get_contents($this->base->config->REPOSITORYDIR.'admin.conf'));
    unset($admin->security);
    $this->base->writeConfig('admin', $admin);
    
    $messages .= $this->language->getEntry('security') . "<br />\n";;

    $this->delModule(self::ID);

    $messages .= $this->uninstallDatabase();
    return $messages;
  }
  
};

?>