<?php

class export extends WAObject
{
  function __construct()
  {
    parent::__construct();
  }

  // $bddutf8 = 0: origin database is latin, 1 = is utf8, 2 = auto (recognize if latin or utf8 on each field)
  public function export($table, $key = null, $bddutf8 = 1)
  {
    $recs = $table->doSelectCondition(null, ($key?new DB_OrderBy($key, DB_OrderBy::ASC):null));

    if(!$recs)
    	return  "";

    $tablename = $table->getName();
    $xml = <<<EOF
<?xml version="1.0" encoding="UTF-8" ?>
<table id="$tablename">
<records>
EOF;

    foreach($recs as $rec)
    {
      $xml .= "<record>\n";
      foreach($rec as $k => $f)
      {
        if ($f === null)
        {
          $null = " null=\"yes\"";
        }
        else
        {
          if ($f instanceof DB_Date)
            $f = $f->getDateFormat("Y-m-d H:i:s");
          $null = "";
        }
        if ($bddutf8 == 1)
          $xml .= "<$k$null>".rawurlencode($f)."</$k>\n";
        elseif ($bddutf8 == 0)
          $xml .= "<$k$null>".rawurlencode(utf8_encode($f))."</$k>\n";
        else
          $xml .= "<$k$null>".rawurlencode($this->convertToUTF8($f))."</$k>\n";
      }
      $xml .= "</record>\n";
    }
    $xml .= "</records>\n</table>\n";
    return $xml;
  }

  private function getHierarchy($table, $key, $father, $fathervalue, $bddutf8)
  {
  	$recs = $table->doSelectCondition(new DB_Condition($father, "=", $fathervalue), new DB_OrderBy($key, DB_OrderBy::ASC));
    if (!$recs)
    {
    	return "";
    }

    $xml = "";
    foreach($recs as $rec)
    {
      $xml .= "<record>\n";
      foreach($rec as $k => $f)
      {
        if ($f === null)
        {
          $null = " null=\"1\"";
        }
        else
        {
          if ($f instanceof DB_Date)
            $f = $f->getDateFormat("Y-m-d H:i:s");
          $null = "";
        }
        if ($bddutf8 == 1)
          $xml .= "<$k$null>".rawurlencode($f)."</$k>\n";
        elseif ($bddutf8 == 0)
          $xml .= "<$k$null>".rawurlencode(utf8_encode($f))."</$k>\n";
        else
          $xml .= "<$k$null>".rawurlencode($this->convertToUTF8($f))."</$k>\n";
      }
      $xml .= "</record>\n";
      $xml .= $this->getHierarchy($table, $key, $father, $rec[$key]);
    }
    return $xml;
  }


  public function exportHierarchic($table, $key, $father, $bddutf8 = 1)
  {
    $xml = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<table>\n<name>".$table->getName()."</name>\n<records>\n";
    $xml .= $this->getHierarchy($table, $key, $father, null, $bddutf8);
    $xml .= "</records>\n</table>\n";
    return $xml;
  }

  // RECOGNIZE IF A STRING IS LATIN OR UTF8 AND RETURN UTF8 VALUE
  private function convertToUTF8($val)
  {
    $utf8 = 'áéíóúÁÉÍÓÚñÑèçâîôûàäëïöüù';
    $latin = utf8_decode($utf8);
    if (preg_match("/[".$utf8."]/", $val))
      return $val;
    if (preg_match("/[".$latin."]/", $val))
      return utf8_encode($val);
    return $val;
  }


}

?>