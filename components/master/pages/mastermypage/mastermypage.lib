<?php

/* @DESCR -- Do not edit

WebAbility Base Version: >= 6
Module: master
Language: PHP5 or PHP7
Creation: 2017-01-11
Copyright: Ing. Philippe Thomassigny (c) 2002-2017

-

WebAbility v6 master my page
2017-02-03: Phil, Revision and Rewrite the library

@End_DESCR */

class mastermypage extends \common\WAApplication
{
  public function __construct($template, $language)
  {
    parent::__construct($template, $language);
  }

  // we add our own parameters to application
  public function getParameters($engine, $params)
  {
    return array(
                 'FORM' => $this->getForm());
  }

  public function getForm()
  {
    // then we create the mask object
    $M = new \dommask\DomMask(null, null, $this);
    $M->maskid = 'formaccount';
    $M->mode = \dommask\DomMask::INSERT;
    $M->key = 'default';

    $M->alertmessage = '##mask.errormessage##';
    $M->servermessage = '##mask.servermessage##';
    $M->titles[\dommask\DomMask::INSERT] = '##mask.titleinsert##';
    $M->titles[\dommask\DomMask::VIEW] = '##mask.titleview##';

    // username
    $F = new \dommask\DomMaskTextField('username');
    $F->title = '##username.title##';
    $F->helpdescription = '##username.help.description##';
    $F->notnullmodes = 1;
    $F->statusnotnull = '##username.status.notnull##';
    $F->minlength = 4;
    $F->maxlength = 80;
    $F->statustooshort = '##username.status.tooshort##';
    $F->urlvariable = 'username';
    $F->default = $this->base->config->user;
    $M->addMaskField($F);

    // password
    $F = new \dommask\DomMaskPWField('password');
    $F->title = '##password.title##';
    $F->helpdescription = '##password.help.description##';
    $F->maxlength = 80;
    $F->urlvariable = 'password';
    $M->addMaskField($F);

    // email
    $F = new \dommask\DomMaskMailField('email');
    $F->title = '##email.title##';
    $F->helpdescription = '##email.help.description##';
    $F->notnullmodes = 1;
    $F->statusnotnull = '##email.status.notnull##';
    $F->maxlength = 200;  // chars
    $F->urlvariable = 'email';
    $F->default = $this->base->config->email;
    $M->addMaskField($F);

    $F = new \dommask\DomMaskButtonField('submit');
    $F->action = 'submit';
    $F->authmodes = 1; // insert
    $F->title = '##form.continue##';
    $M->addMaskField($F);

    $F = new \dommask\DomMaskButtonField('reset');
    $F->action = 'reset';
    $F->authmodes = 1; // insert + view
    $F->title = '##form.reset##';
    $M->addMaskField($F);

    $M->record = array(
      'username' => $this->base->config->username,
      'email' => $this->base->config->email
    );
    
    return $M->code()->compile();
  }

  public function formaccount($engine, $params)
  {
    $username = $this->base->HTTPRequest->getParameter('username');
    $password = $this->base->HTTPRequest->getParameter('password');
    $email = $this->base->HTTPRequest->getParameter('email');

    $success = true;
    $messages = array();
    $messagetext = '';
    if (!$username)
    {
      $success = false;
      $messages['username'] = $this->language->getEntry('error.username.missing');
      $messagetext .= $this->language->getEntry('error.username.missing');
    }
    if ($password)
    {
      // change password
      if ($username && $username == $password)
      {
        $success = false;
        $messages['password'] = $this->language->getEntry('error.password.same');
        $messagetext .= $this->language->getEntry('error.password.same');
      }
    }

    if ($success)
    {
      $master = new \xconfig\XConfig(file_get_contents($this->base->config->REPOSITORYDIR.'master.conf'));
      $master->user = $username;
      $master->email = $email;
      if ($password)
        $master->password = md5($password);
    
      $this->base->writeConfig('master', $master);

      $messages['text'] = $this->language->getEntry('success');
    }
    else
      $messages['text'] = $messagetext;

    return array('success' => $success, 'messages' => $messages, 'popup' => false);
  }
}

?>